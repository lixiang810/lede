#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2020 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#

name: OpenWrt-CI

on:
  push:
    branches: 
      - master
  # schedule:
  #   - cron: 0 20 * * *
  release:
    types: [published]

jobs:

  build_openwrt:

    name: Build OpenWrt firmware

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* android*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          # sudo mkdir -p -m 777 /mnt/openwrt/bin /mnt/openwrt/build_dir/host /mnt/openwrt/build_dir/hostpkg /mnt/openwrt/dl /mnt/openwrt/feeds /mnt/openwrt/staging_dir
          # ln -s /mnt/openwrt/bin ./bin
          # mkdir -p ./build_dir
          # ln -s -f /mnt/openwrt/build_dir/host ./build_dir/host
          # ln -s -f /mnt/openwrt/build_dir/hostpkg ./build_dir/hostpkg
          # ln -s /mnt/openwrt/dl ./dl
          # ln -s /mnt/openwrt/feeds ./feeds
          # ln -s /mnt/openwrt/staging_dir ./staging_dir
          df -h
      - name: Update feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config
          #
          # 在 cat >> .config <<EOF 到 EOF 之间粘贴你的编译配置, 需注意缩进关系
          # 例如:
          cat >> .config <<EOF
          CONFIG_TARGET_bcm27xx=y
          CONFIG_TARGET_bcm27xx_bcm2711=y
          CONFIG_TARGET_bcm27xx_bcm2711_DEVICE_rpi-4=y
          CONFIG_HAS_SUBTARGETS=y
          CONFIG_TARGET_IMAGES_GZIP=y
          CONFIG_KERNEL_BUILD_USER="OpenWrt-CI"
          CONFIG_KERNEL_BUILD_DOMAIN="Azure"
          CONFIG_TARGET_bcm27xx_bcm2711_DEVICE_rpi-4=y
          CONFIG_HAS_SUBTARGETS=y
          CONFIG_HAS_DEVICES=y
          CONFIG_TARGET_BOARD="bcm27xx"
          CONFIG_TARGET_SUBTARGET="bcm2711"
          CONFIG_TARGET_PROFILE="DEVICE_rpi-4"
          CONFIG_TARGET_ARCH_PACKAGES="aarch64_cortex-a72"
          CONFIG_DEFAULT_TARGET_OPTIMIZATION="-Os -pipe"
          CONFIG_CPU_TYPE="cortex-a72"
          CONFIG_LINUX_5_4=y
          CONFIG_DEFAULT_base-files=y
          CONFIG_DEFAULT_bcm27xx-gpu-fw=y
          CONFIG_DEFAULT_block-mount=y
          CONFIG_DEFAULT_busybox=y
          CONFIG_DEFAULT_ca-certificates=y
          CONFIG_DEFAULT_coremark=y
          CONFIG_DEFAULT_cypress-firmware-43455-sdio=y
          CONFIG_DEFAULT_cypress-nvram-43455-sdio-rpi-4b=y
          CONFIG_DEFAULT_ddns-scripts_aliyun=y
          CONFIG_DEFAULT_ddns-scripts_dnspod=y
          CONFIG_DEFAULT_default-settings=y
          CONFIG_DEFAULT_dnsmasq-full=y
          CONFIG_DEFAULT_dropbear=y
          CONFIG_DEFAULT_e2fsprogs=y
          CONFIG_DEFAULT_firewall=y
          CONFIG_DEFAULT_fstools=y
          CONFIG_DEFAULT_iptables=y
          CONFIG_DEFAULT_iwinfo=y
          CONFIG_DEFAULT_kmod-brcmfmac=y
          CONFIG_DEFAULT_kmod-fs-vfat=y
          CONFIG_DEFAULT_kmod-ipt-raw=y
          CONFIG_DEFAULT_kmod-nf-nathelper=y
          CONFIG_DEFAULT_kmod-nf-nathelper-extra=y
          CONFIG_DEFAULT_kmod-nls-cp437=y
          CONFIG_DEFAULT_kmod-nls-iso8859-1=y
          CONFIG_DEFAULT_kmod-sound-arm-bcm2835=y
          CONFIG_DEFAULT_kmod-sound-core=y
          CONFIG_DEFAULT_kmod-usb-hid=y
          CONFIG_DEFAULT_libc=y
          CONFIG_DEFAULT_libgcc=y
          CONFIG_DEFAULT_libustream-openssl=y
          CONFIG_DEFAULT_logd=y
          CONFIG_DEFAULT_luci=y
          CONFIG_DEFAULT_luci-app-accesscontrol=y
          CONFIG_DEFAULT_luci-app-arpbind=y
          CONFIG_DEFAULT_luci-app-autoreboot=y
          CONFIG_DEFAULT_luci-app-cpufreq=y
          CONFIG_DEFAULT_luci-app-ddns=y
          CONFIG_DEFAULT_luci-app-filetransfer=y
          CONFIG_DEFAULT_luci-app-nlbwmon=y
          CONFIG_DEFAULT_luci-app-ramfree=y
          CONFIG_DEFAULT_luci-app-sfe=y
          CONFIG_DEFAULT_luci-app-ssr-plus=y
          CONFIG_DEFAULT_luci-app-unblockmusic=y
          CONFIG_DEFAULT_luci-app-upnp=y
          CONFIG_DEFAULT_luci-app-vlmcsd=y
          CONFIG_DEFAULT_luci-app-vsftpd=y
          CONFIG_DEFAULT_luci-app-webadmin=y
          CONFIG_DEFAULT_luci-app-wol=y
          CONFIG_DEFAULT_mkf2fs=y
          CONFIG_DEFAULT_mtd=y
          CONFIG_DEFAULT_netifd=y
          CONFIG_DEFAULT_opkg=y
          CONFIG_DEFAULT_partx-utils=y
          CONFIG_DEFAULT_ppp=y
          CONFIG_DEFAULT_ppp-mod-pppoe=y
          CONFIG_DEFAULT_uci=y
          CONFIG_DEFAULT_uclient-fetch=y
          CONFIG_DEFAULT_urandom-seed=y
          CONFIG_DEFAULT_urngd=y
          CONFIG_DEFAULT_wget=y
          CONFIG_DEFAULT_wpad-basic-wolfssl=y
          CONFIG_HAS_FPU=y
          CONFIG_AUDIO_SUPPORT=y
          CONFIG_GPIO_SUPPORT=y
          CONFIG_PCI_SUPPORT=y
          CONFIG_PCIE_SUPPORT=y
          CONFIG_USB_SUPPORT=y
          CONFIG_USB_GADGET_SUPPORT=y
          CONFIG_USES_DEVICETREE=y
          CONFIG_USES_SQUASHFS=y
          CONFIG_USES_EXT4=y
          CONFIG_ARCH_64BIT=y
          CONFIG_USES_ROOTFS_PART=y
          CONFIG_USES_BOOT_PART=y
          CONFIG_aarch64=y
          CONFIG_ARCH="aarch64"
          CONFIG_TARGET_EXT4_BLOCKSIZE=4096
          CONFIG_TARGET_ROOTFS_SQUASHFS=y
          CONFIG_TARGET_SQUASHFS_BLOCK_SIZE=256
          CONFIG_TARGET_UBIFS_FREE_SPACE_FIXUP=y
          CONFIG_TARGET_UBIFS_JOURNAL_SIZE=""
          CONFIG_TARGET_IMAGES_GZIP=y
          CONFIG_TARGET_ROOTFS_EXT4FS=y
          CONFIG_TARGET_EXT4_RESERVED_PCT=0
          CONFIG_TARGET_EXT4_BLOCKSIZE_4K=y
          CONFIG_TARGET_KERNEL_PARTSIZE=128
          CONFIG_TARGET_ROOTFS_PARTSIZE=10000
          EOF
          #
          # ===============================================================
          # 
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
      - name: Make download
        run: |
          make download -j8 || make download -j1 V=s
          rm -rf $(find ./dl/ -size -1024c)
          df -h
      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h ./ --max-depth=1
          du -h /mnt/openwrt/ --max-depth=1 || true
      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/
      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/

      - name: Upload release asset
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true
